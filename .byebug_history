quit
image
next
quit
image
next
image
quit
new_image == duplicate_image
new_image
next
new_pixel
duplicate_image.object_id
new_image.object_id
new_image
next
new_image
index
next
arr
continue
duplicate_image.object_id
new_image.object_id
new_image
next
quit
new_image.object_id
duplicate_image.object_id
duplicate_image == new_image
duplicate_image
new_image
next
img
continue
arr
continue
next
quit
new_image == duplicate_image
new_image = duplicate_image
duplicate_image
new_image
next
new_pixel
next
duplicate_image
new_image
index
next
arr
img
continue
img
quit
u
img
arr
continue
arr
continue
arr
quit
index
next
arr
index
next
arr
new_image
new_img
img
arr
next
new_pixel
next
index
next
arr
next
arr
next
index
next
arr
quit
new_image
puts new_image
y
x
arr
next
new_pixel
next
index
next
arr
next
new_pixel
new_piexel
index
next
arr
y
x
quit
index
next
y
x
next
new_pixel
next
index
y
x
next
new_pixel
next
index
quit
y
x
index
quit
to_decimal(arr.join)
arr
quit
arr.join
arr
quit
board[0].size
board.size
board
next
f.to_a
next
f.to_a
f
quit
892/2
(0..446).count
0...447
(0...447)
(0...447)last
(0...447)[-1]
447 + 447
(0...447).count
num
board.size
board[5...10].size
board[5...11].size
board[0...5].size
board2.to_a.size
board[0...3].size
board[447...893].size
board[0..447].size
board[0...447].size
board.size
board2.to_a.size
next
new_board.to_a.size
next
quit
board
next
quit
continue
next
new_board
next
new_board
next
board
next
quit
hash
n
quit
n
quit
m
quit
scan_matrix?(m)
m
quit
x
scan_matrix?(m)
scan_matrix(m)
m
quit
a
a = [true,true,false]
[true,true,false]
e >= 9
e >=9
e
quit
e
a.each {|e| return e >=9 }
a
m
n
m.size - 1
m.size
m
m.size -1
x
n
s
x == (m.size -1)
n
m.size - 1
m.size
m
y
x
n
y
x
m
continue
n
continue
m
n
m
n
y
x
continue
m
n
y
x
continue
m
y
x
next
y
x
a
f
n
m
next
m
y
x
nex
n
y
x
m
continue
m
