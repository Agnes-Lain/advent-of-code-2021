quit
board[0].size
board.size
board
next
f.to_a
next
f.to_a
f
quit
892/2
(0..446).count
0...447
(0...447)
(0...447)last
(0...447)[-1]
447 + 447
(0...447).count
num
board.size
board[5...10].size
board[5...11].size
board[0...5].size
board2.to_a.size
board[0...3].size
board[447...893].size
board[0..447].size
board[0...447].size
board.size
board2.to_a.size
next
new_board.to_a.size
next
quit
board
next
quit
continue
next
new_board
next
new_board
next
board
next
quit
hash
n
quit
n
quit
m
quit
scan_matrix?(m)
m
quit
x
scan_matrix?(m)
scan_matrix(m)
m
quit
a
a = [true,true,false]
[true,true,false]
e >= 9
e >=9
e
quit
e
a.each {|e| return e >=9 }
a
m
n
m.size - 1
m.size
m
m.size -1
x
n
s
x == (m.size -1)
n
m.size - 1
m.size
m
y
x
n
y
x
m
continue
n
continue
m
n
m
n
y
x
continue
m
n
y
x
continue
m
y
x
next
y
x
a
f
n
m
next
m
y
x
nex
n
y
x
m
continue
m
n
m
y
x
quit
m
y
x
next
y
x
m
continue
m
continue
y
x
quit
y
x
continue
m
n
m
n
y
x
continue
n
m
n
m
n
m
y
x
n
m
n
quit
fquit
flash
n
m[x+b][y+b] < 9
m[x+b][y+b]
m
y
x
b.inspect
b
a
quit
next
st
next
quit
st
next
st
next
quit
qiut
next
st
next
st
quit
next
st
next
st
quit
y_left
x_down
quit
input[1][1]
y
x
point
v
down_search
next
quit
sub_a
x_down
n
next
quit
x_down
sub_a
next
sub_a
next
continue
num
continue
num
continue
num
continue
num
x_limit
quit
num
n
num
n
num
n
num
n
num
n
num
n
num
n
index
x
i
num
n
num
continue
n
x
n
x
n
